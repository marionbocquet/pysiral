# Level-3 processor settings suitable for default l2i input files and output for C3S ICDR/CDR 
# 
# Version 1.0

# ==================================================
# Level-2 Parameters
# ==================================================

# List of input files in the level-2 parameter and gridding method. 

l2_parameter:

    radar_freeboard:
        grid_method: average
        dtype: f4
        fillvalue: .NAN

    radar_freeboard_uncertainty:
        grid_method: average
        dtype: f4
        fillvalue: .NAN

    freeboard:
        grid_method: average
        dtype: f4
        fillvalue: .NAN

    freeboard_uncertainty:
        grid_method: average
        dtype: f4
        fillvalue: .NAN

    sea_ice_thickness:
        grid_method: average
        dtype: f4
        fillvalue: .NAN

    sea_ice_concentration:
        grid_method: average
        dtype: f4
        fillvalue: .NAN

    sea_ice_thickness_uncertainty:
        grid_method: average
        dtype: f4
        fillvalue: .NAN

    sea_surface_anomaly:
        grid_method: average
        dtype: f4
        fillvalue: .NAN

    sea_surface_anomaly_uncertainty:
        grid_method: average
        dtype: f4
        fillvalue: .NAN

    mean_sea_surface:
        grid_method: average
        dtype: f4
        fillvalue: .NAN

    snow_depth:
        grid_method: average
        dtype: f4
        fillvalue: .NAN

    snow_depth_uncertainty:
        grid_method: average
        dtype: f4
        fillvalue: .NAN

    snow_density:
        grid_method: average
        dtype: f4
        fillvalue: .NAN

    snow_density_uncertainty:
        grid_method: average
        dtype: f4
        fillvalue: .NAN

    ice_density:
        grid_method: average
        dtype: f4
        fillvalue: .NAN

    ice_density_uncertainty:
        grid_method: average
        dtype: f4
        fillvalue: .NAN

    sea_ice_type:
        grid_method: average
        dtype: f4
        fillvalue: .NAN

    sea_ice_type_uncertainty:
        grid_method: average
        dtype: f4
        fillvalue: .NAN

    radar_mode:
        grid_method: average
        dtype: f4
        fillvalue: .NAN

    region_code:
        grid_method: median
        dtype: i4
        fillvalue: -1
        
    surface_type:
        grid_method: none
        dtype: i4
        fillvalue: -1

# ==================================================
# Level-2 Pre-Filter
# ==================================================

# the prefilter will apply a nan mask from a specified parameter to other parameters

l2i_prefilter:
    active: False
    nan_source: Null
    nan_targets: Null

# ==================================================
# Level-3 Parameter
# ==================================================

# l3 parameter need to be computed by the Level-3 processor, therefore can only be chosen from a list 
# of valid l3 parameter names. (l2 parameter surface type is mandatory)

l3_parameter:

    quality_flag:
        dtype: i1
        fillvalue: 0

    status_flag:
        dtype: i1
        fillvalue: 0

    n_total_waveforms:
        dtype: f4
        fillvalue: .NAN

    n_valid_waveforms:
        dtype: f4
        fillvalue: .NAN

    valid_fraction:
        dtype: f4
        fillvalue: .NAN

    lead_fraction:
        dtype: f4
        fillvalue: .NAN

    ice_fraction:
        dtype: f4
        fillvalue: .NAN

    negative_thickness_fraction:
        dtype: f4
        fillvalue: .NAN

# ==================================================
# External Masks
# ==================================================

external_masks:
    - warren99_is_valid
    - landsea

# ==================================================
# Grid settings
# ==================================================
grid_settings:
    no_land_cells: True
    minimum_valid_grid_points: 2


# ==================================================
# Post processing for gridded parameters
# ==================================================

processing_items:

    # Compute surface type statistics based on surface type classification
    - label: "Load masks"
      module_name: pysiral.l3proc
      class_name: Level3LoadMasks
      options:
        mask_names: ["warren99_is_valid", "landsea"]

    # Compute surface type statistics based on surface type classification
    - label: "Compute surface type statistics"
      module_name: pysiral.l3proc
      class_name: Level3SurfaceTypeStatistics
      options: {}

    # Compute the status flag
    - label: "Get status flag"
      module_name: pysiral.l3proc
      class_name: Level3StatusFlag
      options: 
        retrieval_status_target: sea_ice_thickness
        sic_thrs: 70.
        flag_values:
            no_data: 0 
            is_below_sic_thrs: 1
            is_pole_hole: 2
            is_land: 3
            retrieval_failed: 4
            has_retrieval: 5

    # Compute the quality flag
    - label: "Get quality flag"
      module_name: pysiral.l3proc
      class_name: Level3QualityFlag
      options:
        # This setting is currently without effect
        add_rule_flags: maximum_value
        # A list of rules that will be checked
        rules: 
            # Mark everything outside of the Warren99 Climatology as biased
            # Note: This method requires loading the external mask with id `warren99_is_valid`
            qif_warren99_valid_flag:
                type: method
                target_flag: 3
            # Check for lead fractions not only in the grid cell but also in the adjacent 
            # grid cells. Idea is that grid cell with low lead fractions have still high 
            # confidence if enough leads in the neighbourhood
            qif_lead_availability:
                search_radius_m: 75000.
                area_lead_fraction_minimum: 0.1
                target_flag: 2
            # Check radar mode for SARin mode (only applicable for CryoSat-2)
            qif_cs2_radar_mode_is_sin:
                target_flag: 2
            # Check number of waveforms and raise flag if low
            qif_n_waveforms:
                thresholds: [50, 10]
                target_flags: [2, 3]
            # Check the negative thickness fraction and raise flag if high
            qif_high_negative_thickness_fraction:
                thresholds: [0.2, 0.4]
                target_flags: [2, 3]