# Based on sicci2sit_protoC01_cryosat2_north.yaml and added with uncertainty tags and updated ssa smoothing

id: "ESA CCI+ CryoSat-2 reprocessed southern hemisphere sea-ice thickness climate data record - Fall 2019 preview 1"
version_tag: "v3p0-preview1"

# This settings file is valid for
hemisphere: south

# Level 2 processor settings are mission specific
mission:
    id: cryosat2


# Transfer data from the l1b to the l2 data object (from any data group)
# The notation is the following:
#
#   $data_group_name:
#       $l1p_varname:
#           aux_id: id of the auxiliary parameter (l2.$aux_id)
#           aux_name: long name for output definition
#
# NOTE: Any parameter will be registered as a auxiliary data object

transfer_from_l1p:

    options:
        verbose: False

    classifier:

        sigma0:
            aux_id: sig
            aux_name: sigma0

        peakiness:
            aux_id: pp
            aux_name: pulse_peakiness

        leading_edge_width:
            aux_id: lew
            aux_name: leading_edge_width

        late_tail_to_peak_power:
            aux_id: ltpp
            aux_name: late_tail_to_peak_power

        stack_standard_deviation:
            aux_id: ssd
            aux_name: stack_standard_deviation

    correction:

        dry_troposphere:
            aux_id: rcdt
            aux_name: dry_troposphere

        wet_troposphere:
            aux_id: rcwt
            aux_name: wet_troposphere

        inverse_barometric:
            aux_id: rcib
            aux_name: inverse_barometric

        ionospheric:
            aux_id: rcio
            aux_name: ionospheric

        ocean_tide_elastic:
            aux_id: rcote
            aux_name: ocean_tide_elastic

        ocean_tide_long_period:
            aux_id: rcotlp
            aux_name: ocean_tide_long_period

        ocean_loading_tide:
            aux_id: rcolt
            aux_name: ocean_loading_tide

        solid_earth_tide:
            aux_id: rcset
            aux_name: solid_earth_tide

        geocentric_polar_tide:
            aux_id: rcgpt
            aux_name: geocentric_polar_tide
    
    time_orbit:

        antenna_pitch:
            aux_id: toantptch
            aux_name: antenna_pitch

        antenna_roll:
            aux_id: toantrll
            aux_name: antenna_roll

        antenna_yaw:
            aux_id: toantyaw
            aux_name: antenna_yaw

    waveform:
        
        is_valid:
            aux_id: flgwfm
            aux_name: flag_waveform_is_valid

# A list auxilliary datasets. (the tag "name" links to the corresponding tag in config/auxdata.yaml)
# NOTE: The order of the auxdata definition is important as there might be dependancies of auxiliary datasets
auxdata:

    # Add region codes
    # NOTE: It is advisable to do this in the beginning, since the following auxiliary data types can
    #       be modified depending on region code
    - region:
            name: blank_region
            options: null

    # Load the
    - mss:
            name: dtu18
            options:
                latitude_range: [45.0, 90.0]

    - sic:
         name: c3s_v1p2
         options:
            exception_on_error: False

    - sitype:
         name: fyi_default
         options: 
             uncertainty_default: 0.1

    - snow:
         name: icdc_climatology_south
         options:
             snow_density: 300
             snow_density_uncertainty: 20
             smooth_snow_depth: true
             smooth_filter_width_m: 25000.0

# geophysical corrections applied to the l1b range window
corrections:
    - wet_troposphere
    - ionospheric
    - ocean_tide_elastic
    - ocean_tide_long_period
    - ocean_loading_tide
    - solid_earth_tide
    - geocentric_polar_tide

# Surface type classification algorithm
surface_type:
    pyclass: SICCI2
    options:
        sar:
            ocean:
                peakiness_max: 5.0
                ice_concentration_min: 5.0
            lead:
                peakiness_min: [80.70, 75.10, 73.20, 69.50, 69.70, 69.30, 69.20, 69.50, 69.70, 71.70, 76.00, 78.10]
                sea_ice_backscatter_min: [28.50, 26.80, 26.20, 24.60, 23.40, 22.80, 23.00, 23.00, 23.20, 24.00, 25.90, 27.30]
                leading_edge_width_max: [0.71, 0.73, 0.74, 0.77, 0.77, 0.77, 0.78, 0.77, 0.77, 0.76, 0.74, 0.72]
                ice_concentration_min: 70.0
            sea_ice:
                peakiness_max: [40.10, 35.30, 32.90, 30.20, 28.70, 28.90, 28.10, 28.00, 28.40, 29.60, 34.10, 36.60]
                sea_ice_backscatter_min: 2.5
                sea_ice_backscatter_max: [26.30, 24.10, 25.10, 26.20, 23.10, 20.90, 20.20, 19.10, 20.00, 20.60, 22.90, 23.90]
                leading_edge_width_min: [0.87, 0.95, 0.98, 1.02, 1.07, 1.07, 1.12, 1.13, 1.11, 1.08, 0.95, 0.92]
                ice_concentration_min: 70.0
        sin:
            ocean:
                peakiness_max: 5.0
                ice_concentration_min: 5.0
            lead:
                peakiness_min: [307.40, 300.70, 291.70, 288.50, 283.70, 284.20, 276.90, 284.40, 278.90, 289.40, 299.40, 307.70]
                sea_ice_backscatter_min: [29.20, 29.00, 28.50, 27.80, 26.90, 26.50, 26.30, 27.00, 26.20, 27.20, 27.50, 28.40]
                leading_edge_width_max: [1.00, 1.01, 1.03, 1.04, 1.06, 1.05, 1.07, 1.05, 1.07, 1.05, 1.02, 1.00]
                ice_concentration_min: 70.0
            sea_ice:
                peakiness_max: [138.40, 126.10, 124.90, 127.30, 122.20, 121.00, 114.90, 115.80, 114.30, 121.20, 126.50, 135.20]
                sea_ice_backscatter_min: 2.5
                sea_ice_backscatter_max: [26.40, 25.10, 27.60, 27.30, 24.90, 24.20, 24.10, 24.90, 23.70, 25.00, 25.20, 25.00]
                leading_edge_width_min: [1.31, 1.40, 1.37, 1.34, 1.37, 1.38, 1.41, 1.41, 1.42, 1.38, 1.36, 1.33]
                ice_concentration_min: 70.0


# Retracking algorithm dependent on surface type
retracker:
    ocean:
        pyclass: NoneRetracker
        options: null
    lead:
        pyclass: cTFMRA
        options:
            # if arrays than [lrm, sar, sin]
            threshold: 0.5
            offset: 0.0
            wfm_oversampling_factor: 10
            wfm_oversampling_method: linear
            wfm_smoothing_window_size: [11, 11, 21]
            first_maximum_normalized_threshold: [0.15, 0.15, 0.45]
            first_maximum_local_order: 1
            range_bias: [-0.022, 0.047, 0.017]
            uncertainty:
                type: fixed
                value: 0.1
    sea_ice:
        pyclass: cTFMRA
        options:
            # if arrays than [lrm, sar, sin]
            threshold: 0.5
            offset: 0.0
            wfm_oversampling_factor: 10
            wfm_oversampling_method: linear
            wfm_smoothing_window_size: [11, 11, 21]
            first_maximum_normalized_threshold: [0.15, 0.15, 0.45]
            first_maximum_local_order: 1
            range_bias: [-0.022, 0.047, 0.017]
            uncertainty:
                type: fixed
                value: 0.1

# Algorithm for instantaneos sea surface height (mss + ssa) and radar freeboard
ssa:
    pyclass: SSASmoothedLinear
    options:
        use_ocean_wfm: False
        smooth_filter_width_m: 100000.0
        smooth_filter_width_footprint_size: 300.0
        pre_filtering: true
        pre_filter_maximum_mss_median_offset: 5.0 # in meter
        uncertainty_tiepoints_distance_max: 100000.
        uncertainty_minimum: 0.02
        uncertainty_maximum: 0.10
        marine_segment_filter:
            minimum_lead_number: 1
        tiepoint_maxdist_filter:
            maximum_distance_to_tiepoint: 200000.
            edges_only: false

# Estimation of Radar Freeboard
afrb:
    pyclass: RadarFreeboardDefault
    options: null

# Algorithm for converting radar freeboard into freeboard
frb:
    pyclass: SnowGeometricCorrection
    options:
        vacuum_light_speed_reduction: 0.22

# Algorithm for getting sea ice thickness from other l2 parameters
sit:
    pyclass: SeaIceFreeboardDefault
    options:
        water_density: 1024.0
        fyi_density: 916.7
        myi_density: 882.0
        # Base values for pure ice type uncertainties from Alexandrov et al., 2010, The Cryosphere
        uncertainty:
            fyi_density: 35.7
            myi_density: 23.0

# List of filter at different stages of l2 processing
# (can be list of filters)
filter:

    # Filters after freeboard computation
    freeboard:
        frb_valid_range:
            pyclass: L2ParameterValidRange
            options:
                valid_minimum_point_value: -0.25
                valid_maximum_point_value: 2.25

    # Filters after thickness computation
    thickness:
        frb_valid_range:
            pyclass: L2ParameterValidRange
            options:
                valid_minimum_point_value: -0.5
                valid_maximum_point_value: 10.5

# Tests if l1b orbit file is valid
validator:

    # Tests (Can be several) after surface type classification
    surface_type:
        n_leads:
            pyclass: LeadFixedMinimumNumber
            options:
                minimum_n_leads: 3

# Post-Processing (tbd if needed)
post_processing:

    # Compute sea ice draft
    - label: "Compute Sea Ice Draft"
      module_name: pysiral.sit
      class_name: L2SeaIceDraft
      options: {}